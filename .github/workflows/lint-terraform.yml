on:
  workflow_call:
    inputs:
      use-terragrunt:
        # Note: this is a string, not a boolean as booleans are not supported well in worflow_calls
        # If you are reading, you might want to check if that has changed yet, as it is a bug in github actions
        description: 'Set to "true" if you want to use Terragrunt'
        required: false
        default: 'false'
        type: string
      terragrunt-version:
        description: 'The version of Terragrunt to install'
        required: false
        type: string
        default: 'latest'
      terraform-version:
        description: 'The version of Terraform to install'
        required: false
        type: string
        default: 'latest'
      working-directory:
        description: 'The path to the directory to run the lints from'
        required: false
        type: string
        default: '.'
jobs:
  lint:
    name: Lint terraform
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ "$USE_TERRAGRUNT" == "true" ]] ; then
            echo "bin_name=terragrunt" >> "$GITHUB_OUTPUT"
          else
            echo "bin_name=terraform" >> "$GITHUB_OUTPUT"
          fi
        env:
          USE_TERRAGRUNT: ${{ inputs.use-terragrunt == 'true' && 'true' || 'false' }}
        shell: bash
        id: binary_name
      - uses: actions/checkout@v5
        name: Checkout
      - uses: hashicorp/setup-terraform@v3
        name: Setup Terraform
        with:
          terraform_version: ${{ inputs.terraform-version }}
          terraform_wrapper: ${{ steps.binary_name.outputs.bin_name == 'terragrunt' && 'true' || 'false' }}
      - uses: armakuni/github-actions/setup-terragrunt@v0.19.7
        if: ${{ steps.binary_name.outputs.bin_name == 'terragrunt' }}
        name: Setup Terragrunt
        with:
          version: ${{ inputs.terragrunt-version }}
      - name: Terraform fmt
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: terraform fmt -check -diff -recursive
      - name: Terragrunt hclfmt
        shell: bash
        if: ${{ steps.binary_name.outputs.bin_name == 'terragrunt' }}
        working-directory: ${{ inputs.working-directory }}
        run: terragrunt hclfmt --terragrunt-check --terragrunt-diff

      - name: Check for critical vulnerabilities in terraform code
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          exit-code: '1'
          scan-ref: ${{ inputs.working-directory }}
          severity: 'CRITICAL'

      - name: Warn for other vulnerabilities in terraform code
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          exit-code: '0'
          scan-ref: ${{ inputs.working-directory }}
